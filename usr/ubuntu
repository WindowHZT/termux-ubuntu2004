#!/bin/bash
#字体颜色
red="\e[31;1m"      #红
green="\e[32;1m"   #绿
yellow="\e[33;1m"  #黄
blue="\e[34;1m"    #蓝
purple="\e[35;1m"    #紫红
cyanine="\e[36;1m"    #青蓝
white="\e[0m"		##白色

msg() { clear;echo -e "\n\t\t$blue[*]$white$1$2$white\n" ;:;}  ##自定义通告颜色
enter() { echo -en "\n\n$green按回车继续$white";read op ;:;}  ##
s=0



##主题-------------------------------------------------------工作区---------------------------------------------------------------------------------------------------------
_theme(){
	
	##.icons
	_ICONS=(
	"Colloid-cursors.tar.xz"
	"Colloid-dark-cursors.tar.xz"
	"Fluent-cursors.tar.xz"
	"Fluent-dark-cursors.tar.xz"
	"Layan-border-cursors.tar.xz"
	"Layan-cursors.tar.xz"
	"Layan-white-cursors.tar.xz"
	"Nordzy-cursors-lefthand.tar.xz"
	"Nordzy-cursors-white.tar.xz"
	"Nordzy-cursors.tar.xz"
	"WhiteSur-cursors.tar.xz"
	"oreo_black_cursors.tar.xz"
	"oreo_spark_green_cursors.tar.xz"
	"oreo_spark_purple_cursors.tar.xz"
	"oreo_spark_red_cursors.tar.xz"
	"volantes_cursors.tar.xz"
	)
	
	##.themes
	THEMES=(
	"Mojave-Dark.tar.xz"
	"Mojave-Light.tar.xz"
	"Nordic.tar.xz"
	"WhiteSur-Light-green.tar.xz"
	"WhiteSur-Light-red.tar.xz"
	"vimix-amethyst.tar.xz"
	"vimix-beryl.tar.xz"
	"vimix-dark-amethyst.tar.xz"
	"vimix-dark-beryl.tar.xz"
	"vimix-dark-doder.tar.xz"
	"vimix-dark-ruby.tar.xz"
	"vimix-dark.tar.xz"
	"vimix-doder.tar.xz"
	"vimix-light-amethyst.tar.xz"
	"vimix-light-beryl.tar.xz"
	"vimix-light-doder.tar.xz"
	"vimix-light-ruby.tar.xz"
	"vimix-light.tar.xz"
	"vimix-ruby.tar.xz"
	"vimix.tar.xz"
	)
	
	##background
	BG=(wallpaper01.png wallpaper02.png wallpaper03.png wallpaper04.png wallpaper05.png wallpaper06.png wallpaper07.png wallpaper08.png wallpaper09.jpeg wallpaper10.jpg wallpaper11.jpg wallpaper12.jpeg wallpaper13.png wallpaper14.jpg wallpaper15.jpg wallpaper16.jpg wallpaper17.jpg wallpaper18.jpeg wallpaper19.png wallpaper20.png wallpaper21.png wallpaper22.jpeg wallpaper23.jpeg wallpaper24.png wallpaper25.png wallpaper26.jpeg wallpaper27.jpeg wallpaper28.jpeg wallpaper29.png wallpaper30.jpeg wallpaper31.jpeg wallpaper32.jpeg wallpaper33.jpeg wallpaper34.jpeg wallpaper35.jpeg wallpaper36.jpeg wallpaper37.png wallpaper38.png wallpaper39.jpeg wallpaper40.jpeg wallpaper41.png wallpaper42.png wallpaper43.png wallpaper44.png wallpaper45.jpeg wallpaper46.jpeg)	
	
	##icons
	ICONS=(
	"Marwaita.tar.xz"
	"McMojave-circle-dark.tar.xz"
	"McMojave-circle.tar.xz"
	"Qogir-dark.tar.xz"
	"Qogir.tar.xz"
	"Reversal-black.tar.xz"
	"Reversal-blue.tar.xz"
	"Reversal-brown.tar.xz"
	"Reversal-cyan.tar.xz"
	"Reversal-green.tar.xz"
	"Reversal-grey.tar.xz"
	"Reversal-orange.tar.xz"
	"Reversal-pink.tar.xz"
	"Reversal-purple.tar.xz"
	"Reversal-red.tar.xz"
	"Tela-circle-dark.tar.xz"
	"Tela-circle.tar.xz"
	"WhiteSur-dark.tar.xz"
	"WhiteSur.tar.xz"
	)
	
	_changeOP(){
		tmp=""
		count=1
		export FILE=()
		for x in $*
		do
			printf " $count" >> /tmp/file
			printf " $x" >> /tmp/file
			FILE[$(($count-1))]=$x
			let count++
		done
		
		sed -i "s#.tar.xz##g"  /tmp/file
		printf " $count" >> /tmp/file
		printf " 取消" >> /tmp/file
		export OPTIONS=()
		count=0
		for x in `cat  /tmp/file`
		do
			OPTIONS[$count]="$x"
			let count++
		done
		rm -rf /tmp/file
	}
	
	_bg(){
		count=1
		OPTIONS=()
		for x in `echo "${BG[*]}" |  sed "s#.png##g;s#.jpg##g;s#.jpeg##g"`
		do
			printf $count >> /tmp/file
			printf " $x " >> /tmp/file
			let count++
		done
		
		printf " $count" >> /tmp/file
		printf " 取消" >> /tmp/file
		count=0
		for x in `cat /tmp/file`
		do
			OPTIONS[$count]=$x
			let count++
		done
		rm -rf /tmp/file

		_dialog "首页→桌面美化→桌面背景" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#BG[*]}+1))" ]&&return
		
		package=${BG[$(($op-1))]}
		[ ! -e /tmp/bg/ ]&&mkdir -p /tmp/bg/
		
		msg $red "下载资源包…ing"
		#wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/bg/$package" -O "/tmp/bg/$package"
		wget -c "gitee.com/djyd/termux-ubuntu2004/raw/main/bg/$package" -O "/tmp/bg/$package"
		
		xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorVNC-0/workspace0/last-image -s  "/tmp/bg/$package"
		var=`xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorVNC-0/workspace0/last-image `
		
		#msg $green "设置桌面背景`echo $package | sed "s#.png##g;s#.jpg##g;s#.jpeg##g"`完成～"
		echo -e "$yellow系统当前背景为$var"
		echo -e "$green\n\n\t如果桌面背景没有设置成功请检查网络，再重新设置！"
		enter
	}
	
	_themes(){
		_changeOP ${THEMES[@]}
		_dialog "首页→桌面美化→主题" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#FILE[*]}+1))" ]&&return

		package=${FILE[$(($op-1))]}
		[ ! -e /tmp/.themes/ ]&&mkdir -p /tmp/.themes/
		
		if [ ! -e "~/.themes/`echo $package | sed "s#.tar.xz##g"`" ];then
			[ ! -e ~/.themes ]&&mkdir -p ~/.themes 
			msg $red "下载资源包…ing"
			#wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/.themes/$package" -O "/tmp/.themes/$package"
			wget -c "gitee.com/djyd/termux-ubuntu2004/raw/main/.themes/$package" -O "/tmp/.themes/$package"
			echo "状态码$?"
			read op
			msg $red "解压资源…ing"
			sleep 1
			xz -d "/tmp/.themes/$package"
			tar -xvhf "/tmp/.themes/`echo $package | sed "s#.xz##g"`" -C ~/.themes/
		fi
		
		xfconf-query -c xsettings -p /Net/ThemeName -s "`echo $package | sed "s#.tar.xz##g"`"
		var=`xfconf-query -c xsettings -p /Net/ThemeName `
		
		#msg $green "设置主题`echo $package | sed "s#.tar.xz##g"`完成～"
		echo -e "$yellow系统当前主题为$var"
		echo -e "$green\n\n\t如果主题没有设置成功请检查网络，再重新设置！"
		enter
	}
	
	_icons(){
		_changeOP ${ICONS[@]}
		_dialog "首页→桌面美化→软件图标" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#FILE[*]}+1))" ]&&return

		package=${FILE[$(($op-1))]}
		[ ! -e /tmp/icons/ ]&&mkdir -p /tmp/icons/
		
		if [ ! -e "~/icons/`echo $package | sed "s#.tar.xz##g"`" ];then
			[ ! -e ~/.local/share/icons  ]&&mkdir -p ~/.local/share/icons 
			msg $red "下载资源包…ing"
			sleep 1
			#wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/icons/$package" -O "/tmp/icons/$package"
			wget -c "gitee.com/djyd/termux-ubuntu2004/raw/main/icons/$package" -O "/tmp/icons/$package"
			echo "状态码$?"
			read op

			msg $red "解压资源…ing"
			xz -d "/tmp/icons/$package"
			tar -xvhf "/tmp/icons/`echo $package | sed "s#.xz##g"`" -C ~/.local/share/icons 
		fi
		
		xfconf-query -c xsettings -p /Net/IconThemeName -s "`echo $package | sed "s#.tar.xz##g"`"
		var=`xfconf-query -c xsettings -p /Net/IconThemeName`
		
		#msg $green "设置软件图标`echo $package | sed "s#.tar.xz##g"`完成～"
		echo -e "$yellow系统当前软件图标为$var"
		echo -e "$green\n\n\t如果软件图标没有设置成功请检查网络，再重新设置！"
		enter
	
	}
		
	_mouse(){
		_changeOP ${_ICONS[@]}
		_dialog "首页→桌面美化→光标(鼠标)" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#FILE[*]}+1))" ]&&return

		package=${FILE[$(($op-1))]}
		[ ! -e /tmp/.icons/ ]&&mkdir -p /tmp/.icons/
		
		if [ ! -e "~/.icons/`echo $package | sed "s#.tar.xz##g"`" ];then
			[ ! -e ~/.icons  ]&&mkdir -p ~/.icons 
			msg $red "下载资源包…ing"
			sleep 1
			#wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/.icons/$package" -O "/tmp/.icons/$package"
			wget -c "gitee.com/djyd/termux-ubuntu2004/raw/main/.icons/$package" -O "/tmp/.icons/$package"
			
			msg $red "解压资源…ing"
			xz -d "/tmp/.icons/$package"
			tar -xvhf "/tmp/.icons/`echo $package | sed "s#.xz##g"`" -C ~/.icons 
		fi
		
		xfconf-query -c xsettings -p /Gtk/CursorThemeName -s "`echo $package | sed "s#.tar.xz##g"`"
		var=`xfconf-query -c xsettings -p /Gtk/CursorThemeName`
		
		#msg $green "设置光标(鼠标)`echo $package | sed "s#.tar.xz##g"`完成～"
		echo -e "$yellow系统当前光标为$var"
		echo -e "$green\n\n\t如果光标(鼠标)没有设置成功请检查网络，再重新设置！"
		enter	
	}
	
	
	
		OPTIONS=(
			1 "桌面背景"   ##bg
			2 "主题"    ##.themes
			3 "软件图标"   ##local/share/icons
			4 "光标(鼠标)"  ##.icons
			5 "取消")

    _dialog "首页→桌面美化" "请选择" $OPTIONS
    
	case $op in
    	1)
			_bg
			;;
    	2)
			_themes
			;;
    	3)
			_icons
			;;
    	4)
			_mouse
			;;
    	*)
			return
			;;
	esac

}
##主题----------------------------------------------------------------------------------------------------------------------------------------------------------------



##更换源
_Sources(){
	_Termux(){
		OPTIONS=(
			1 "官方源（国外）"
			2 "清华源（国内）"    
			3 "北京外国语源（国内）"    
			4 "阿里源（国内）"
			5 "中科大源（国内）"
			6 "取消")

    _dialog "首页→更换源sources.list→Termux 源" "请选择" $OPTIONS


	sourcesFile="/data/data/com.termux/files/usr/etc/apt/sources.list"
	case $op in
    	1)
			cat<<-EOF>$sourcesFile   ##官方
			# The main termux repository, behind cloudflare cache:
			# deb https://packages-cf.termux.dev/apt/termux-main/ stable main
			# The main termux repository:
			deb https://packages.termux.dev/apt/termux-main/ stable main
			EOF
			;;
    	2)
			cat<<-EOF>$sourcesFile   ##清华
			# The termux repository mirror from TUNA:
			deb https://mirrors.tuna.tsinghua.edu.cn/termux/apt/termux-main stable main
			EOF
			;;
    	3)
			cat<<-EOF>$sourcesFile  ##北京外国语
			# The main termux repository, behind cloudflare cache:
			# deb https://packages-cf.termux.dev/apt/termux-main/ stable main
			# The main termux repository:
			#deb https://packages.termux.dev/apt/termux-main/ stable main
			deb https://mirrors.bfsu.edu.cn/termux/apt/termux-main stable main
			EOF
			;;
    	4)
			cat<<-EOF>$sourcesFile
			# The termux repository mirror from aliyun:
			deb https://mirrors.aliyun.com/termux/termux-packages-24 stable main
			EOF
			;;
    	5)
			cat<<-EOF>$sourcesFile
			# The termux repository mirror from ustc:
			deb https://mirrors.ustc.edu.cn/termux/apt/termux-main stable main
			EOF
			;;
    	*)
			return
			;;
	esac
	msg $red "更换成功！"
	echo -e "$yellow如果网速不能跑满你的宽带网络，请更换其他源$white"
	enter
	}


	_Ubuntu(){		
		OPTIONS=(
			1 "官方源（国外）"
			2 "清华源（国内）"    
			3 "北京外国语源（国内）"    
			4 "阿里源（国内）"
			5 "中科大源（国内）"
			6 "网易163源（国内）"
			7 "取消")

    _dialog "首页→更换源sources.list→Ubuntu 源" "请选择" $OPTIONS
 
	case $op in
    	1)
			cat<<-EOF>/etc/apt/sources.list   ##官方
			deb http://ports.ubuntu.com/ubuntu-ports/ focal main restricted
			deb http://ports.ubuntu.com/ubuntu-ports/ focal-updates main restricted
			deb http://ports.ubuntu.com/ubuntu-ports/ focal universe
			deb http://ports.ubuntu.com/ubuntu-ports/ focal-updates universe
			deb http://ports.ubuntu.com/ubuntu-ports/ focal multiverse
			deb http://ports.ubuntu.com/ubuntu-ports/ focal-updates multiverse
			deb http://ports.ubuntu.com/ubuntu-ports/ focal-backports main restricted universe multiverse
			deb http://ports.ubuntu.com/ubuntu-ports/ focal-security main restricted
			deb http://ports.ubuntu.com/ubuntu-ports/ focal-security universe
			deb http://ports.ubuntu.com/ubuntu-ports/ focal-security multiverse
			EOF
			;;
    	2)
			cat<<-EOF>/etc/apt/sources.list   ##清华arm64
			# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释
			deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse
			# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse
			deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse
			# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse
			deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse
			# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse
			deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse
			# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse
			
			# 预发布软件源，不建议启用
			# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse
			# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse
			EOF
			;;
    	3)
			cat<<-EOF>/etc/apt/sources.list    ##北京外国语大学
			# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释
			deb https://mirrors.bfsu.edu.cn/ubuntu-ports/ focal main restricted universe multiverse
			# deb-src https://mirrors.bfsu.edu.cn/ubuntu-ports/ focal main restricted universe multiverse
			deb https://mirrors.bfsu.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse
			# deb-src https://mirrors.bfsu.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse
			deb https://mirrors.bfsu.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse
			# deb-src https://mirrors.bfsu.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse
			deb https://mirrors.bfsu.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse
			# deb-src https://mirrors.bfsu.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse
			
			# 预发布软件源，不建议启用
			# deb https://mirrors.bfsu.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse
			# deb-src https://mirrors.bfsu.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse
			EOF
			;;
    	4)
			cat<<-EOF>/etc/apt/sources.list    ##阿里云  Arm64，Armhf等
			# 默认注释了源码仓库，如有需要可自行取消注释
			deb https://mirrors.aliyun.com/ubuntu-ports/ xenial main restricted universe multiverse
			# deb-src https://mirrors.aliyun.com/ubuntu-ports/ xenial main main restricted universe multiverse
			deb https://mirrors.aliyun.com/ubuntu-ports/ xenial-updates main restricted universe multiverse
			# deb-src https://mirrors.aliyun.com/ubuntu-ports/ xenial-updates main restricted universe multiverse
			deb https://mirrors.aliyun.com/ubuntu-ports/ xenial-backports main restricted universe multiverse
			# deb-src https://mirrors.aliyun.com/ubuntu-ports/ xenial-backports main restricted universe multiverse
			deb https://mirrors.aliyun.com/ubuntu-ports/ xenial-security main restricted universe multiverse
			# deb-src https://mirrors.aliyun.com/ubuntu-ports/ xenial-security main restricted universe multiverse
						
			# 预发布软件源，不建议启用
			# deb https://mirrors.aliyun.com/ubuntu-ports/ xenial-proposed main restricted universe multiverse
			# deb-src https://mirrors.aliyun.com/ubuntu-ports/ xenial-proposed main restricted universe multiverse
 			EOF
			;;
    	5)
			cat<<-EOF>/etc/apt/sources.list    ##中科大  arm64, armhf, PowerPC, ppc64el, s390x
			# 默认注释了源码仓库，如有需要可自行取消注释
			deb https://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main restricted universe multiverse
			# deb-src https://mirrors.ustc.edu.cn/ubuntu-ports/ xenial main main restricted universe multiverse
			deb https://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main restricted universe multiverse
			# deb-src https://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-updates main restricted universe multiverse
			deb https://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main restricted universe multiverse
			# deb-src https://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-backports main restricted universe multiverse
			deb https://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main restricted universe multiverse
			# deb-src https://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-security main restricted universe multiverse
			
			# 预发布软件源，不建议启用
			# deb https://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main restricted universe multiverse
			# deb-src https://mirrors.ustc.edu.cn/ubuntu-ports/ xenial-proposed main restricted universe multiverse
			EOF
			;;
    	6)
			cat<<-EOF>/etc/apt/sources.list
			deb http://mirrors.163.com/ubuntu-ports// focal main restricted universe multiverse
			deb http://mirrors.163.com/ubuntu-ports// focal-security main restricted universe multiverse
			deb http://mirrors.163.com/ubuntu-ports// focal-updates main restricted universe multiverse
			deb http://mirrors.163.com/ubuntu-ports// focal-backports main restricted universe multiverse
			# deb-src http://mirrors.163.com/ubuntu-ports// focal main restricted universe multiverse
			# deb-src http://mirrors.163.com/ubuntu-ports// focal-security main restricted universe multiverse
			# deb-src http://mirrors.163.com/ubuntu-ports// focal-updates main restricted universe multiverse
			# deb-src http://mirrors.163.com/ubuntu-ports// focal-backports main restricted universe multiverse
			## Pre-released source, not recommended.
			# deb http://mirrors.163.com/ubuntu-ports// focal-proposed main restricted universe multiverse
			# deb-src http://mirrors.163.com/ubuntu-ports// focal-proposed main restricted universe multiverse
			EOF
			;;
    	*)
			return
			;;
	esac
	
	msg $red "更换成功！"
	echo -e "$yellow如果网速不能跑满你的宽带网络，请更换其他源$white"
	enter
	}
	
		OPTIONS=(
			1 "Ubuntu 源（arm64，armhf）"   
			2 "Termux 源（arm64，armhf）"  
			3 "取消")

    _dialog "首页→更换源sources.list" "请选择" $OPTIONS
 
	case $op in
    	1)
			_Ubuntu
			;;
    	2)
			_Termux
			;;
    	*)
			return
			;;
	esac   
}


_xrdp(){

	_i(){	
		msg $red "安装xrdp DR远程桌面"
		sudo apt install xrdp -y
		sed -i '6{s/^/xfce4-session/}' /etc/X11/Xsession
		echo xfce4-session >~/.xsession
		
		msg $green "安装完毕～"
		enter
	}
	
	_start(){
		OPTIONS=(
	         1 "［Xvnc模式］"
	         2 "［Xorg模式］"
	         3 "取消")
	
		_dialog "首页→xrdp→启动界面" "请选择" $OPTIONS
		
		case $op in
			1)
				xrdp -k
				rm -rf /var/run/xrdp/xrdp.pid
				row=`cat /etc/xrdp/xrdp.ini | grep -n '; in sesman.ini. See and configure also sesman.ini.' | awk -F ":" '{print $1}'`
				sed -i "$(($row+1)),`cat /etc/xrdp/xrdp.ini | wc -l`"d /etc/xrdp/xrdp.ini
				
				cat <<- EOF >>/etc/xrdp/xrdp.ini
				[Xvnc]
				name=Xvnc
				lib=libvnc.so
				username=ask
				password=ask
				ip=127.0.0.1
				port=5901
				#xserverbpp=24
				#delay_ms=2000
				EOF
				
				xrdp
				enter
				;;
			2)
				xrdp -k
				rm -rf /var/run/xrdp/xrdp.pid
				row=`cat /etc/xrdp/xrdp.ini | grep -n '; in sesman.ini. See and configure also sesman.ini.' | awk -F ":" '{print $1}'`
				sed -i "$(($row+1)),`cat /etc/xrdp/xrdp.ini | wc -l`"d /etc/xrdp/xrdp.ini
				
				cat <<- EOF >>/etc/xrdp/xrdp.ini
				[Xorg]
				name=Xorg
				lib=libxup.so
				username=ask
				password=ask
				ip=127.0.0.1
				port=5901
				code=20
				EOF
				
				xrdp
				enter
				;;
			*)
				return
				;;
		esac
	}
		
		

	
	_d(){
		msg $red "卸载xrdp DR远程桌面"
		sudo apt purge xrdp -y
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "启动xrdp"
         2 "安装xrdp DR远程桌面"
         3 "卸载xrdp DR远程桌面"
         4 "取消")
    
    _dialog "首页→xrdp DR远程桌面" "请选择" $OPTIONS

	case $op in
    	1)
			if [ -z "`dpkg -l | grep xrdp`" ];then
				echo -e "$red请先安装xrdp！$white"
				enter
				return
			else
				_start
			fi
			;;
    	2)
			_i
			;;
    	3)
			_d
			;;
    	*)
			return
			;;
	esac
}


##终端美化
_term(){
	echo
}

##作者留言
_other(){
	clear
	echo -e "$red很幸运与你相遇～～$white"
	#echo -e "$red 此ubuntu20.04是up主参考了各大教程所创造的版本！$white"
	enter
}

_update(){
	msg $red "更新ubuntu脚本"
	echo -e "\n\t$green------------------------------$white"
	echo -e "\t$red ubuntu脚本迭代更新信息$white"
	echo -e "\t (1)ubuntu 1.0 最初代脚本$white"
	echo -e "\t (2)ubuntu 1.5 $white"
	echo -e "\t     ●添加_软件安装_功能$white"
	echo -e "\t     ●添加_桌面美化_功能$white"
	echo -e "\t (3)ubuntu 2.0 $red（当前版本）$white"
	echo -e "\t     ●修复若干Bug，添加若干功能$white"
	echo -e "\t$green------------------------------$white"
	echo -e "\n\n\t作者不定时更新脚本，如想体验新功能，更新ubuntu脚本即可体验！"
	enter
	
	for x in ubuntu vnc software 
	do
		while :
		do
			#wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/usr/$x" -O "/tmp/$x"
			wget -c "gitee.com/djyd/termux-ubuntu2004/raw/main/usr/$x" -O "/tmp/$x"
			if [ ! "$?" == "0" ];then
				echo -e "$yellow下载资源失败！请检查网络再继续下载……"
				enter
			else
				mv /tmp/$x /usr/local/bin/$x
				chmod +x /usr/local/bin/$x
				break
			fi
		done
	done
	
	msg $green "更新完毕～"
	enter
	exit
}

_clear(){
	msg $red "这仅仅是清理脚本产生的垃圾，请悉知！"
	enter
	echo -e "$yellow清理安装包.$white"
	df -hl > /tmp/df
	firstdf=`sed -n 2p /tmp/df | awk '{print $5}' | sed "s#%##g"`
	rm -rf /opt/*.tar.gz ~/Downloads/VScode.deb /opt/ttf.tar.xz  /opt/wps.deb
	
	echo -e "\n$yellow清理美化包..$white"	
	rm -rf /tmp/.icons/* /tmp/.themes/* /tmp/icons/*
	
	echo -e "\n$yellow保留用户配置，清除多余资源包...$white"
	bg_name=`xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorVNC-0/workspace0/last-image | awk -F '/' '{print $NF}'`
	themes_name=`xfconf-query -c xsettings -p /Net/ThemeName`
	icons_name=`xfconf-query -c xsettings -p /Net/IconThemeName`
	mouse_name=`xfconf-query -c xsettings -p /Gtk/CursorThemeName`
	
	echo -e "\t|$green用户背景图：$bg_name$white"
	echo -e "\t|$green用户主题：$themes_name$white"
	echo -e "\t|$green用户图标：$icons_name$white"
	echo -e "\t|$green用户光标：$mouse_name$white"
	
	##清理背景图
	if [ -d "/tmp/bg" ];then
		cd /tmp/bg
		for x in `ls`
		do
			[ "$x" == "$bg_name" ]&&continue
			[ -e "/tmp/bg/$x" ]&&sudo rm -rf /tmp/bg/$x
		done
	fi
	
	##清理主题
	if [ -d ~/.themes ];then
		cd ~/.themes 
		for x in `ls -F | grep "/$" | sed "s#/##g"`
		do
			[ "$x" == "$themes_name" ]&&continue
			sudo rm -rf $x >/dev/null 2>&1
			sudo rm -rf $x/ >/dev/null 2>&1
		done
	fi
	
	##清理图标
	if [ -d ~/.local/share/icons ];then
		cd ~/.local/share/icons
		for x in `ls -F | grep "/$" | sed "s#/##g"`
		do
			[ "$x" == "$icons_name" ]&&continue
			sudo rm -rf $x >/dev/null 2>&1
			sudo rm -rf $x/ >/dev/null 2>&1
		done
	fi
		
	##清理光标
	if [ -d ~/.icons  ];then
		cd ~/.icons 
		for x in `ls -F | grep "/$" | sed "s#/##g"`
		do
			[ "$x" == "$mouse_name" ]&&continue
			sudo rm -rf $x >/dev/null 2>&1
			sudo rm -rf $x/ >/dev/null 2>&1
		done
	fi
	
	cd ~
	df -hl > /tmp/df
	enddf=`sed -n 2p /tmp/df | awk '{print $5}' | sed "s#%##g"`
	reslut=`echo "(0.$firstdf-0.$enddf)*108" | bc`
	echo -e "\n$yellow此次清理$reslut G垃圾文件$white"	
	echo -e "\n$green清理完毕～....$white"
	rm -rf /tmp/df
	enter
}

_dialog(){
	export LC_ALL="zh_CN.UTF-8"
	export PORT=1
	
	dialog --clear \
		--backtitle "$1" \
		--title "@参(•̀⌄•́)芜湖起飞" \
	 	--nocancel \
	 	--menu "$2" 20 40 8 \
		"${OPTIONS[@]}" \
	 	2>/tmp/menu
	 	
	 	export op=`cat /tmp/menu`
}



_Main(){
	CONFIG=/usr/local/bin/.config
	OPTIONS=(
         1 "安装/卸载软件"
         2 "桌面美化"
         3 "更换源sources.list"
         #4 "美化终端"  ##sh -c "$(curl -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)"
         4 "xrdp DR远程桌面）"
         5 "vnc 信息"
         6 "版本信息"
         7 "更新ubuntu脚本"
         8 "清理垃圾"
         9 "***关机***"
         10 "退出脚本")
    
    _dialog "首页" "使用↑↓选择，也可以用手点击选项再回车哦" $OPTIONS
	
    case $op in 
    	1)
			source $(dirname $0)/software
			_app
			;;
    	2)
			_theme
			;;
    	3)
			_Sources
			;;
    	4)
			_xrdp
			;;
    	5)
			clear
			vnc
			enter
			;;
    	6)
			msg $red "ubuntu设备信息"
			echo -e "$green----------------版本-----------------$white"
			lsb_release -a
			echo -e "$green----------------磁盘-----------------$white"
			df -hl
			echo -e "$green----------------服务运行状态-----------------$white"
			service --status-all 
			enter
			_other
			;;
    	7)
			_update
			;;
    	8)
			_clear
			;;
    	9)
			msg $yellow "关机提示！"
			echo -e "*****************************************"
			echo -e "  ******$red请先确保资料已保存再关机！$white*****"
			echo -e "*****************************************"
			enter
			enter
			kill -9 `sudo ps -ef | grep '/data/data/com.termux/files/usr/bin/bash -l' | grep -v grep | awk '{print $2}'`
			;;
    	*)
			clear
			export s=1
			;;
esac
}

while :
do
	if [ "$s" == "0" ];then
		_Main
	else
		break
	fi
done


		






