
#字体颜色
red="\e[31;1m"      #红
green="\e[32;1m"   #绿
yellow="\e[33;1m"  #黄
blue="\e[34;1m"    #蓝
purple="\e[35;1m"    #紫红
cyanine="\e[36;1m"    #青蓝
white="\e[0m"

msg() { clear;echo -e "\n\t\t$blue[*]$white$1$2$white\n" ;:;}  ##自定义通告颜色
enter() { echo -en "\n\n$green按回车继续$white";read op ;:;}  ##
s=0

:<<EOF
	case $op in
    	1)
    		
    		;;
    	2)
    		
    		;;
    	3)
    		
    		;;
    	4)
    		
    		;;
    	5)
    		
    		;;
	esac
EOF






##🍎
_chromium(){
	_i(){
		msg $red "安装Chromium浏览器"
		sudo apt-get install apt-utils -y
		sudo apt purge chromium* chromium-browser* snapd -y -qq 
		sudo apt autoremove -y -qq
		sudo apt purge chromium* chromium-browser* -y -qq 
		sudo apt autoremove -y -qq
		sudo apt update -qq
		sudo apt install software-properties-common gnupg --no-install-recommends -y -qq
		echo "deb http://ftp.debian.org/debian buster main
		deb http://ftp.debian.org/debian buster-updates main" >> /etc/apt/sources.list

		apt-key adv --keyserver keyserver.ubuntu.com --recv-keys DCC9EFBF77E11517
		apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138
		apt-key adv --keyserver keyserver.ubuntu.com --recv-keys AA8E81B4331F7F50
		apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 112695A0E562B32A

		sudo apt update -y
		sudo apt install chromium -y
		sed -i 's/chromium %U/chromium --no-sandbox --test-type %U/g' /usr/share/applications/chromium.desktop
		
		cat <<-EOF > ~/Desktop/chromium.desktop
		[Desktop Entry]
		Version=1.0
		Name=Chromium Web Browser
		Exec=/usr/bin/chromium --no-sandbox --test-type %U
		Terminal=false
		X-MultipleArgs=false
		Type=Application
		Icon=chromium
		Categories=Network;WebBrowser;
		MimeType=text/html;text/xml;application/xhtml_xml;application/x-mimearchive;x-scheme-handler/http;x-scheme-handler/https;
		StartupWMClass=chromium
		StartupNotify=true
		EOF
		
		chmod +x  ~/Desktop/chromium.desktop
		msg $green "安装完毕～"
		enter
	}
	
	_d(){
		msg $red "卸载Chromium浏览器"
		sudo apt purge chromium* chromium-browser* snapd -y -qq 
		sudo apt autoremove -y -qq
		rm -rf ~/Desktop/chromium.desktop
		
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装Chromium浏览器"
         2 "卸载Chromium浏览器"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→Chromium浏览器" "请选择" $OPTIONS

	case $op in
    	1)
    		_i
    		;;
    	2)
    		_d
    		;;
    	*)
    		return
    		;;
	esac
}

##🍎
_firefox(){
	_i(){
		##把火狐更到最新版
		msg $red "安装firefox浏览器"
		sudo apt update -y
		sudo apt upgrade -y
		sudo apt purge firefox -y
		#apt install gnupg gnupg2 gnupg1 software-properties-common plank -y
		sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6DCF7707EBC211F	
		sudo apt-add-repository "deb http://ppa.launchpad.net/ubuntu-mozilla-security/ppa/ubuntu bionic main"
		sudo apt update -y
		sudo apt install firefox -y
		
		cat <<-EOF > ~/Desktop/firefox.desktop
		[Desktop Entry]
		Name=firefox
		Comment=firefox
		Exec=/usr/lib/firefox/firefox
		Icon=/usr/lib/firefox/browser/chrome/icons/default/default128.png
		Terminal=false
		Type=Application
		Categories=Application;
		Encoding=UTF-8
		StartupNotify=true
		EOF
		
		chmod +x ~/Desktop/firefox.desktop
		msg $green "安装完毕～"
		echo -e "\n\n\t$red注意：由于火狐的兼容性，可能会导致浏览器崩溃的情况$white"
		echo -e "\t$red解决方法：打开火狐在地址栏输入 about:config 回车，然后接受风险告知(Accept the risk and continue)$white"
		echo -e "\t$red然后在小搜索栏里面输入 sandbox $white"
		echo -e "\t$red把 media.cubeb.sandbox 的值改为 false$white"
		echo -e "\t$red把 security.sandbox.content.level 的值改成 0$white"
		enter
		echo -e "$red这将会导致你的浏览器无法使用，请你截图或记住解决方案！$white"
		enter
	}
	
	_d(){
		msg $red "卸载firefox浏览器"
		sudo apt purge firefox -y 
		rm -rf ~/Desktop/firefox.desktop
		
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装firefox浏览器"
         2 "卸载firefox浏览器"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→火狐firefox浏览器" "请选择" $OPTIONS

	case $op in
    	1)
    		_i
    		;;
    	2)
    		_d
    		;;
    	*)
    		return
    		;;
	esac

}

##🍎
_idea(){
	_i(){
		cd /opt
		if [ "$1" == "1" ];then
			if [ -d /opt/ideaIC ];then
				OPTIONS=(
	        	1 "是"
        		2 "否")
        		
    			_dialog "首页→安装软件→IntelliJ IDEA" "检测到你之前已经安装过ideaIC版，是否卸载重装？" $OPTIONS
				case $op in
    				1)
			    		rm -rf /opt/ideaIC
   				 		;;
			    	*)
			    		return
			    		;;
				esac
			fi

			msg $red "安装IntelliJ IDEA免费版"
			echo -e "\n$green请保持网络通畅（本次下载可以不用加速器！）$white"
			##免费版
			wget -c https://download-cdn.jetbrains.com/idea/ideaIC-2022.2.tar.gz
			[ "$?" == "0" ] && mkdir /opt/ideaIC && tar -zxvf /opt/ideaIC-2022.2.tar.gz -C /opt/ideaIC --strip-components 1

			##创建桌面图标
			cat <<-EOF> ~/Desktop/ideaIC.desktop
			[Desktop Entry]
			Name=IntelliJ IDEA
			Comment=IntelliJ IDEA
			Exec=/opt/ideaIC/bin/idea.sh
			Icon=/opt/ideaIC/bin/idea.png
			Terminal=false
			Type=Application
			Categoories=Developer;
			EOF
			
			chmod +x /opt/ideaIC/bin/idea.sh
			chmod u+x ~/Desktop/ideaIC.desktop
		else
			if [ -d /opt/ideaIU ];then
				OPTIONS=(
	        	1 "是"
        		2 "否")
        		
    			_dialog "首页→安装软件→IntelliJ IDEA" "检测到你之前已经安装过ideaIU版，是否卸载重装？" $OPTIONS
				case $op in
    				1)
			    		rm -rf /opt/ideaIU
   				 		;;
			    	*)
			    		return
			    		;;
				esac
			fi
			msg $red "安装IntelliJ IDEA付费版"
			echo -e "\n$green请保持网络通畅（本次下载可以不用加速器！）$white"
			##付费版
			wget -c https://download-cdn.jetbrains.com/idea/ideaIU-2022.2.tar.gz 
			[ "$?" == "0" ] && mkdir /opt/ideaIU && tar -zxvf /opt/ideaIU-2022.2.tar.gz -C /opt/ideaIU --strip-components 1
			
			##创建桌面图标
			cat <<-EOF> ~/Desktop/ideaIU.desktop
			[Desktop Entry]
			Name=IntelliJ IDEA
			Comment=IntelliJ IDEA
			Exec=/opt/ideaIU/bin/idea.sh
			Icon=/opt/ideaIU/bin/idea.png
			Terminal=false
			Type=Application
			Categoories=Developer;
			EOF
			
			chmod +x /opt/ideaIU/bin/idea.sh
			chmod u+x ~/Desktop/ideaIU.desktop
		fi
		
		
		##安装Java
		msg $red "安装Java环境！"
		sudo apt-get install  default-jre* -y
		
		rm -rf ideaIC-2022.2.tar.gz ideaIU-2022.2.tar.gz 
		cd ~
		msg $green "安装完毕～"
		echo -e "\n\n\t$red如果因网络波动没有安装成功的，请卸载重装！$white"
		enter
	}
	
	_d(){
		if [ "$1" == 1 ];then
			msg $red "卸载IntelliJ IDEA免费版"
			rm -rf /opt/ideaIC /opt/ideaIC.desktop
		else
			msg $red "卸载IntelliJ IDEA付费版"
			rm -rf /opt/ideaIU /opt/ideaIU.desktop
		fi
		
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装IntelliJ IDEA"
         2 "卸载IntelliJ IDEA"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→IntelliJ IDEA 2022.2版本" "请选择" $OPTIONS

	case $op in
    	1)
    		OPTIONS=(
	        1 "社区版IC_免费"
 	        2 "企业版IU_付费"
  		    3 "取消")
			
			_dialog "首页→安装软件→IntelliJ IDEA" "请选择" $OPTIONS
			
			case $op in
		    	1)
  			  		_i 1
    				;;
		    	2)
		    		_i 2
 			  		;;
    			*)
    				return
	    		;;
			esac
    		;;
    	2)
    		OPTIONS=(
	        1 "社区版IC_免费"
 	        2 "企业版IU_付费"
  		    3 "取消")
			
			_dialog "首页→卸载软件→IntelliJ IDEA" "请选择" $OPTIONS
			
			case $op in
		    	1)
  			  		_d 1
    				;;
		    	2)
		    		_d 2
 			  		;;
    			*)
    				return
	    			;;
			esac
    		;;
    	*)
    		return
    		;;
	esac
}

##🍎
_xrdp(){
	_i(){	
		msg $red "安装xrdp DR远程桌面"
		sudo apt install xrdp -y
		sed -i '6{s/^/xfce4-session/}' /etc/X11/Xsession
		echo xfce4-session >~/.xsession
		sed -i "s#port=-1#port=5901#g" /etc/xrdp/xrdp.ini
		
		msg $green "安装完毕～"
		enter
	}
	
	_d(){
		msg $red "卸载xrdp DR远程桌面"
		sudo apt purge xrdp -y
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装xrdp DR远程桌面"
         2 "卸载xrdp DR远程桌面"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→xrdp DR远程桌面" "请选择" $OPTIONS

	case $op in
    	1)
    		_i
    		;;
    	2)
    		_d
    		;;
    	*)
    		return
    		;;
	esac
}

##🍎
_eclipse(){
	echo
}

##🍎
_qq(){
	msg $red "听说你想安装QQ？"
	echo -en "$green老老实实用手机QQ叭……你还嫌内存用不完吗？$white"
	enter
}



##安装/卸载软件🍎
_app(){
	OPTIONS=(
         1 "Cchromium浏览器"
         2 "火狐firefox浏览器"
         3 "IntelliJ IDEA"
         4 "VSCode"
         5 "Eclipse"
         6 "xrdp DR远程桌面"
         7 "QQ"
         8 "取消")
	
	_dialog "首页→安装/卸载软件" "请选择" $OPTIONS
	
	case $op in
    	1)
    		_chromium
    		;;
    	2)
    		_firefox
    		;;
    	3)
    		_idea
    		;;
    	4)
    		_vscode
    		;;
    	5)
    		_eclipse
    		;;
    	6)
    		_xrdp
    		;;
    	7)
    		_qq
    		;;
    	*)
    		return
    	;;
	esac
}

##主题-------------------------------------------------------工作区---------------------------------------------------------------------------------------------------------
_theme(){
	
	##.icons
	_ICONS=(
	"Colloid-cursors.tar.xz"
	"Colloid-dark-cursors.tar.xz"
	"Fluent-cursors.tar.xz"
	"Fluent-dark-cursors.tar.xz"
	"Layan-border-cursors.tar.xz"
	"Layan-cursors.tar.xz"
	"Layan-white-cursors.tar.xz"
	"Nordzy-cursors-lefthand.tar.xz"
	"Nordzy-cursors-white.tar.xz"
	"Nordzy-cursors.tar.xz"
	"WhiteSur-cursors.tar.xz"
	"oreo_black_cursors.tar.xz"
	"oreo_spark_green_cursors.tar.xz"
	"oreo_spark_purple_cursors.tar.xz"
	"oreo_spark_red_cursors.tar.xz"
	"volantes_cursors.tar.xz"
	)
	
	##.themes
	THEMES=(
	"Mojave-Dark.tar.xz"
	"Mojave-Light.tar.xz"
	"Nordic.tar.xz"
	"WhiteSur-Light-green.tar.xz"
	"WhiteSur-Light-red.tar.xz"
	"vimix-amethyst.tar.xz"
	"vimix-beryl.tar.xz"
	"vimix-dark-amethyst.tar.xz"
	"vimix-dark-beryl.tar.xz"
	"vimix-dark-doder.tar.xz"
	"vimix-dark-ruby.tar.xz"
	"vimix-dark.tar.xz"
	"vimix-doder.tar.xz"
	"vimix-light-amethyst.tar.xz"
	"vimix-light-beryl.tar.xz"
	"vimix-light-doder.tar.xz"
	"vimix-light-ruby.tar.xz"
	"vimix-light.tar.xz"
	"vimix-ruby.tar.xz"
	"vimix.tar.xz"
	)
	
	##background
	BG=(
	"Layan1.tar.xz"
	"Layan2.tar.xz"
	"MacOS1.tar.xz"
	"MacOS3.tar.xz"
	"inMouse_5K.tar.xz"
	"inMouse_WQHD.tar.xz"
	"sweet.tar.xz"
	)
	
	##icons
	ICONS=(
	"Marwaita.tar.xz"
	"McMojave-circle-dark.tar.xz"
	"McMojave-circle.tar.xz"
	"Qogir-dark.tar.xz"
	"Qogir.tar.xz"
	"Reversal-black.tar.xz"
	"Reversal-blue.tar.xz"
	"Reversal-brown.tar.xz"
	"Reversal-cyan.tar.xz"
	"Reversal-green.tar.xz"
	"Reversal-grey.tar.xz"
	"Reversal-orange.tar.xz"
	"Reversal-pink.tar.xz"
	"Reversal-purple.tar.xz"
	"Reversal-red.tar.xz"
	"Tela-circle-dark.tar.xz"
	"Tela-circle.tar.xz"
	"WhiteSur-dark.tar.xz"
	"WhiteSur.tar.xz"
	)
	
	_changeOP(){
		tmp=""
		count=1
		export FILE=()
		for x in $*
		do
			printf " $count" >> /tmp/file
			printf " $x" >> /tmp/file
			FILE[$(($count-1))]=$x
			let count++
		done
		
		sed -i "s#.tar.xz##g"  /tmp/file
		printf " $count" >> /tmp/file
		printf " 取消" >> /tmp/file
		export OPTIONS=()
		count=0
		for x in `cat  /tmp/file`
		do
			OPTIONS[$count]="$x"
			let count++
		done
		rm -rf /tmp/file
	}
	
	_bg(){
		_changeOP ${BG[@]}
		_dialog "首页→桌面美化→桌面背景" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#FILE[*]}+1))" ]&&return

		package=${FILE[$(($op-1))]}
		[ ! -e /tmp/bg/ ]&&mkdir -p /tmp/bg/
		
		if [ ! -e "/tmp/bg/`echo $package | sed "s#.tar.xz##g"`" ];then
			msg $red "下载资源包…ing"
			wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/bg/$package" -O "/tmp/bg/$package"
			
			msg $red "解压资源…ing"
			sleep 1
			xz -d "/tmp/bg/$package"
			tar -xvhf "/tmp/bg/`echo $package | sed "s#.xz##g"`" -C /tmp/bg/
		fi
		
		
		image="`echo $package | sed "s#.tar.xz##g"`"
		for x in jpg png bmp jpeg
		do
			if [ -a "/tmp/bg/$image.$x" ];then
				xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorVNC-0/workspace0/last-image -s  "/tmp/bg/$image.$x"
			fi
		done
		
		msg $green "设置桌面背景`echo $package | sed "s#.tar.xz##g"`完成～"
		echo -e "$green\n\n\t如何桌面背景没有设置成功请检查网络，再重新设置！"
		enter
	}
	
	_themes(){
		_changeOP ${THEMES[@]}
		_dialog "首页→桌面美化→主题" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#FILE[*]}+1))" ]&&return

		package=${FILE[$(($op-1))]}
		[ ! -e /tmp/.themes/ ]&&mkdir -p /tmp/.themes/
		
		if [ ! -e "~/.themes/`echo $package | sed "s#.tar.xz##g"`" ];then
			[ ! -e ~/.themes ]&&mkdir -p ~/.themes 
			msg $red "下载资源包…ing"
			wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/.themes/$package" -O "/tmp/.themes/$package"
			
			msg $red "解压资源…ing"
			sleep 1
			xz -d "/tmp/.themes/$package"
			tar -xvhf "/tmp/.themes/`echo $package | sed "s#.xz##g"`" -C ~/.themes/
		fi
		
		xfconf-query -c xsettings -p /Net/ThemeName -s "`echo $package | sed "s#.tar.xz##g"`"
		
		msg $green "设置主题`echo $package | sed "s#.tar.xz##g"`完成～"
		echo -e "$green\n\n\t如何主题没有设置成功请检查网络，再重新设置！"
		enter
	}
	
	_icons(){
		_changeOP ${ICONS[@]}
		_dialog "首页→桌面美化→软件图标" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#FILE[*]}+1))" ]&&return

		package=${FILE[$(($op-1))]}
		[ ! -e /tmp/icons/ ]&&mkdir -p /tmp/icons/
		
		if [ ! -e "~/icons/`echo $package | sed "s#.tar.xz##g"`" ];then
			[ ! -e ~/.local/share/icons  ]&&mkdir -p ~/.local/share/icons 
			msg $red "下载资源包…ing"
			sleep 1
			wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/icons/$package" -O "/tmp/icons/$package"
			
			msg $red "解压资源…ing"
			xz -d "/tmp/icons/$package"
			tar -xvhf "/tmp/icons/`echo $package | sed "s#.xz##g"`" -C ~/.local/share/icons 
		fi
		
		xfconf-query -c xsettings -p /Net/IconThemeName -s "`echo $package | sed "s#.tar.xz##g"`"
		
		msg $green "设置软件图标`echo $package | sed "s#.tar.xz##g"`完成～"
		echo -e "$green\n\n\t如何软件图标没有设置成功请检查网络，再重新设置！"
		enter
	
	}
		
	_mouse(){
		_changeOP ${_ICONS[@]}
		_dialog "首页→桌面美化→光标(鼠标)" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#FILE[*]}+1))" ]&&return

		package=${FILE[$(($op-1))]}
		[ ! -e /tmp/.icons/ ]&&mkdir -p /tmp/.icons/
		
		if [ ! -e "~/.icons/`echo $package | sed "s#.tar.xz##g"`" ];then
			[ ! -e ~/.icons  ]&&mkdir -p ~/.icons 
			msg $red "下载资源包…ing"
			sleep 1
			wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/.icons/$package" -O "/tmp/.icons/$package"
			
			msg $red "解压资源…ing"
			xz -d "/tmp/.icons/$package"
			tar -xvhf "/tmp/.icons/`echo $package | sed "s#.xz##g"`" -C ~/.icons 
		fi
		
		xfconf-query -c xsettings -p /Gtk/CursorThemeName -s "`echo $package | sed "s#.tar.xz##g"`"
		
		msg $green "设置光标(鼠标)`echo $package | sed "s#.tar.xz##g"`完成～"
		echo -e "$green\n\n\t如何光标(鼠标)没有设置成功请检查网络，再重新设置！"
		enter	
	}
	
	
	
		OPTIONS=(
			1 "桌面背景"   ##bg
			2 "主题"    ##.themes
			3 "软件图标"   ##local/share/icons
			4 "光标(鼠标)"  ##.icons
			5 "取消")

    _dialog "首页→桌面美化" "请选择" $OPTIONS
    
	case $op in
    	1)
    		_bg
    		;;
    	2)
    		_themes
    		;;
    	3)
    		_icons
    		;;
    	4)
    		_mouse
    		;;
    	*)
    		return
    		;;
	esac

}
##主题----------------------------------------------------------------------------------------------------------------------------------------------------------------



##更换语言
_language(){
	_en(){
		msg $green "更换为英语"
		sed -i "s#export LC_ALL=zh_CN.UTF-8##g" ~/.bashrc
		echo -e "$red\n\n\t此操作仅会删除 .bashrc 里面的 export LC_ALL=zh_CN.UTF-8$white"
		echo -e "$red\n\n\t重启后生效！$white"
		enter
	}
	
	_zh(){
		msg $green "更换为中文"
		[ -z "`dpkg -l | grep fonts-wqy-microhei`" ]&&sudo apt-get install fonts-wqy-microhei -y
		[ ! -z "`cat /etc/locale.gen|grep '# zh_CN.UTF-8 UTF-8'`" ]&&sed -i "s/# zh_CN.UTF-8 UTF-8/ zh_CN.UTF-8 UTF-8/g" /etc/locale.gen
		locale-gen
		
		[ -z "`cat ~/.bashrc |grep  'export LC_ALL=zh_CN.UTF-8'`" ]&&echo "export LC_ALL=zh_CN.UTF-8" >> ~/.bashrc
		if [[ "`cat ~/.bashrc`" =~ 'if [ "$TERM"="linux" ] ;then ' ]]; then
			echo 'string exist'
		else
		    cat <<-EOF>>~/.bashrc
			if [ "\$TERM"="linux" ] ;then 
				export LANGUAGE=en_US 
			fi 
			EOF
		
		fi
		
		echo -e "$red\n\n\t重启后生效！$white"
		enter
	}
	
	
		OPTIONS=(
			1 "英文"   
			2 "中文"    
			3 "取消")

    _dialog "首页→更换语言" "请选择" $OPTIONS
 
	case $op in
    	1)
    		_en
    		;;
    	2)
    		_zh
    		;;
    	*)
    		return
    		;;
	esac   
}

##终端美化
_term(){
	echo
}

##作者留言
_other(){
	clear
	echo -e "$red很幸运与你相遇～～$white"
	#echo -e "$red 此ubuntu20.04是up主参考了各大教程所创造的版本！$white"
	enter
}

_dialog(){
	export LC_ALL="zh_CN.UTF-8"
	export PORT=1
	
	dialog --clear \
		--backtitle "$1" \
		--title "@参(•̀⌄•́)芜湖起飞" \
	 	--nocancel \
	 	--menu "$2" 20 40 8 \
		"${OPTIONS[@]}" \
	 	2>/tmp/menu
	 	
	 	export op=`cat /tmp/menu`
}



_Main(){
	OPTIONS=(
         1 "安装/卸载软件"
         2 "桌面美化"
         3 "更换语言"
         #4 "美化终端"  ##sh -c "$(curl -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)"
         4 "作者留言"
         5 "vnc 信息"
         6 "版本信息"
         7 "退出")
    
    _dialog "首页" "使用↑↓选择，也可以用手点击选项再回车哦" $OPTIONS
	
    case $op in 
    	1)
    		_app
    		;;
    	2)
    		_theme
    		;;
    	3)
    		_language
    		;;
    	4)
    		_other
    		;;
    	5)
    		clear
    		vnc
    		enter
    		;;
    	6)
    		msg $red "ubuntu设备信息"
			echo -e "$green----------------版本-----------------$white"
			lsb_release -a
			echo -e "$green----------------磁盘-----------------$white"
			df -hl
    		enter
    		;;
    	*)
    		clear
    		export s=1
    		;;
esac
}

while :
do
	if [ "$s" == "0" ];then
		_Main
	else
		break
	fi
done







