#!/bin/bash
#字体颜色
red="\e[31;1m"      #红
green="\e[32;1m"   #绿
yellow="\e[33;1m"  #黄
blue="\e[34;1m"    #蓝
purple="\e[35;1m"    #紫红
cyanine="\e[36;1m"    #青蓝
white="\e[0m"

msg() { clear;echo -e "\n\t\t$blue[*]$white$1$2$white\n" ;:;}  ##自定义通告颜色
enter() { echo -en "\n\n$green按回车继续$white";read op ;:;}  ##
s=0


##🍎
_chromium(){
	_i(){
		msg $red "安装Chromium浏览器"
		sudo apt-get install apt-utils -y
		sudo apt purge chromium* chromium-browser* snapd -y -qq 
		sudo apt autoremove -y -qq
		sudo apt purge chromium* chromium-browser* -y -qq 
		sudo apt autoremove -y -qq
		sudo apt update -qq
		sudo apt install software-properties-common gnupg --no-install-recommends -y -qq
		echo "deb http://ftp.debian.org/debian buster main
		deb http://ftp.debian.org/debian buster-updates main" >> /etc/apt/sources.list

		apt-key adv --keyserver keyserver.ubuntu.com --recv-keys DCC9EFBF77E11517
		apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138
		apt-key adv --keyserver keyserver.ubuntu.com --recv-keys AA8E81B4331F7F50
		apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 112695A0E562B32A

		sudo apt update -y
		sudo apt install chromium -y
		sed -i 's/chromium %U/chromium --no-sandbox --test-type %U/g' /usr/share/applications/chromium.desktop
		
		cat <<-EOF > ~/Desktop/chromium.desktop
		[Desktop Entry]
		Version=1.0
		Name=Chromium Web Browser
		Exec=/usr/bin/chromium --no-sandbox --test-type %U
		Terminal=false
		X-MultipleArgs=false
		Type=Application
		Icon=chromium
		Categories=Network;WebBrowser;
		MimeType=text/html;text/xml;application/xhtml_xml;application/x-mimearchive;x-scheme-handler/http;x-scheme-handler/https;
		StartupWMClass=chromium
		StartupNotify=true
		EOF
		
		chmod +x  ~/Desktop/chromium.desktop
		msg $green "安装完毕～"
		enter
	}
	
	_d(){
		msg $red "卸载Chromium浏览器"
		sudo apt purge chromium* chromium-browser* snapd -y -qq 
		sudo apt autoremove -y -qq
		rm -rf ~/Desktop/chromium.desktop
		
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装Chromium浏览器"
         2 "卸载Chromium浏览器"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→Chromium浏览器" "请选择" $OPTIONS

	case $op in
    	1)
    		_i
    		;;
    	2)
    		_d
    		;;
    	*)
    		return
    		;;
	esac
}

##🍎
_firefox(){
	_i(){
		##把火狐更到最新版
		msg $red "安装firefox浏览器"
		sudo apt update -y
		sudo apt upgrade -y
		sudo apt purge firefox -y
		#apt install gnupg gnupg2 gnupg1 software-properties-common plank -y
		sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6DCF7707EBC211F	
		sudo apt-add-repository "deb http://ppa.launchpad.net/ubuntu-mozilla-security/ppa/ubuntu bionic main"
		sudo apt update -y
		sudo apt install firefox -y
		
		cat <<-EOF > ~/Desktop/firefox.desktop
		[Desktop Entry]
		Name=firefox
		Comment=firefox
		Exec=/usr/lib/firefox/firefox
		Icon=/usr/lib/firefox/browser/chrome/icons/default/default128.png
		Terminal=false
		Type=Application
		Categories=Application;
		Encoding=UTF-8
		StartupNotify=true
		EOF
		
		chmod +x ~/Desktop/firefox.desktop
		msg $green "安装完毕～"
		echo -e "\n\n\t$red注意：由于火狐的兼容性，可能会导致浏览器崩溃的情况$white"
		echo -e "\t$red解决方法：打开火狐在地址栏输入 about:config 回车，然后接受风险告知(Accept the risk and continue)$white"
		echo -e "\t$red然后在小搜索栏里面输入 sandbox $white"
		echo -e "\t$red把 media.cubeb.sandbox 的值改为 false$white"
		echo -e "\t$red把 security.sandbox.content.level 的值改成 0$white"
		enter
		echo -e "$red这将会导致你的浏览器无法使用，请你截图或记住解决方案！$white"
		enter
	}
	
	_d(){
		msg $red "卸载firefox浏览器"
		sudo apt purge firefox -y 
		rm -rf ~/Desktop/firefox.desktop
		
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装firefox浏览器"
         2 "卸载firefox浏览器"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→火狐firefox浏览器" "请选择" $OPTIONS

	case $op in
    	1)
    		_i
    		;;
    	2)
    		_d
    		;;
    	*)
    		return
    		;;
	esac

}

##🍎
_idea(){
	_i(){
		cd /opt
		if [ "$1" == "1" ];then
			if [ -d /opt/ideaIC ];then
				OPTIONS=(
	        	1 "是"
        		2 "否")
        		
    			_dialog "首页→安装软件→IntelliJ IDEA" "检测到你之前已经安装过ideaIC版，是否卸载重装？" $OPTIONS
				case $op in
    				1)
			    		rm -rf /opt/ideaIC
   				 		;;
			    	*)
			    		return
			    		;;
				esac
			fi

			msg $red "安装IntelliJ IDEA免费版"
			echo -e "\n$green请保持网络通畅（本次下载可以不用加速器！）$white"
			##免费版
			wget -c https://download-cdn.jetbrains.com/idea/ideaIC-2022.2.tar.gz
			[ "$?" == "0" ] && mkdir /opt/ideaIC && tar -zxvf /opt/ideaIC-2022.2.tar.gz -C /opt/ideaIC --strip-components 1

			##创建桌面图标
			cat <<-EOF> ~/Desktop/ideaIC.desktop
			[Desktop Entry]
			Name=IntelliJ IDEA
			Comment=IntelliJ IDEA
			Exec=/opt/ideaIC/bin/idea.sh
			Icon=/opt/ideaIC/bin/idea.png
			Terminal=false
			Type=Application
			Categoories=Developer;
			EOF
			
			chmod +x /opt/ideaIC/bin/idea.sh
			chmod u+x ~/Desktop/ideaIC.desktop
		else
			if [ -d /opt/ideaIU ];then
				OPTIONS=(
	        	1 "是"
        		2 "否")
        		
    			_dialog "首页→安装软件→IntelliJ IDEA" "检测到你之前已经安装过ideaIU版，是否卸载重装？" $OPTIONS
				case $op in
    				1)
			    		rm -rf /opt/ideaIU
   				 		;;
			    	*)
			    		return
			    		;;
				esac
			fi
			msg $red "安装IntelliJ IDEA付费版"
			echo -e "\n$green请保持网络通畅（本次下载可以不用加速器！）$white"
			##付费版
			wget -c https://download-cdn.jetbrains.com/idea/ideaIU-2022.2.tar.gz 
			[ "$?" == "0" ] && mkdir /opt/ideaIU && tar -zxvf /opt/ideaIU-2022.2.tar.gz -C /opt/ideaIU --strip-components 1
			
			##创建桌面图标
			cat <<-EOF> ~/Desktop/ideaIU.desktop
			[Desktop Entry]
			Name=IntelliJ IDEA
			Comment=IntelliJ IDEA
			Exec=/opt/ideaIU/bin/idea.sh
			Icon=/opt/ideaIU/bin/idea.png
			Terminal=false
			Type=Application
			Categoories=Developer;
			EOF
			
			chmod +x /opt/ideaIU/bin/idea.sh
			chmod u+x ~/Desktop/ideaIU.desktop
		fi
		
		
		##安装Java
		msg $red "安装Java环境！"
		sudo apt-get install  default-jre* -y
		
		cd ~
		msg $green "安装完毕～"
		echo -e "\n\n\t$red如果因网络波动没有安装成功的，请卸载重装！$white"
		enter
	}
	
	_d(){
		if [ "$1" == 1 ];then
			msg $red "卸载IntelliJ IDEA免费版"
			rm -rf /opt/ideaIC ~/Desktop/ideaIC.desktop
		else
			msg $red "卸载IntelliJ IDEA付费版"
			rm -rf /opt/ideaIU ~/Desktop/ideaIU.desktop
		fi
		
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装IntelliJ IDEA"
         2 "卸载IntelliJ IDEA"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→IntelliJ IDEA 2022.2版本" "请选择" $OPTIONS

	case $op in
    	1)
    		OPTIONS=(
	        1 "社区版IC_免费"
 	        2 "企业版IU_付费"
  		    3 "取消")
			
			_dialog "首页→安装软件→IntelliJ IDEA" "请选择" $OPTIONS
			
			case $op in
		    	1)
  			  		_i 1
    				;;
		    	2)
		    		_i 2
 			  		;;
    			*)
    				return
	    		;;
			esac
    		;;
    	2)
    		OPTIONS=(
	        1 "社区版IC_免费"
 	        2 "企业版IU_付费"
  		    3 "取消")
			
			_dialog "首页→卸载软件→IntelliJ IDEA" "请选择" $OPTIONS
			
			case $op in
		    	1)
  			  		_d 1
    				;;
		    	2)
		    		_d 2
 			  		;;
    			*)
    				return
	    			;;
			esac
    		;;
    	*)
    		return
    		;;
	esac
}

_vscode(){
	
	
	
	_i(){
		msg $red "安装Visual Studio Code"
		wget -c https://az764295.vo.msecnd.net/stable/784b0177c56c607789f9638da7b6bf3230d47a8c/code_1.71.0-1662017130_arm64.deb -O ~/Downloads/VScode.deb
		sudo dpkg -i ~/Downloads/VScode.deb
		sudo apt --fix-broken install -y
		
		cat<<-EOF > ~/Desktop/VScode.desktop
		[Desktop Entry]
		Name=Visual Studio Code
		Comment=Multi-platform code editor for Linux
		Exec=/usr/share/code/bin/code --user-data-dir=~/.vscode --no-sandbox .
		Icon=/usr/share/code/resources/app/resources/linux/code.png
		Type=Application
		StartupNotify=true
		Categories=TextEditor;Development;Utility;
		MimeType=text/plain;
		EOF

		chmod +x ~/Desktop/VScode.desktop
		sed -i 's#Exec=/usr/share/code/code --unity-launch %F#Exec=/usr/share/code/bin/code --user-data-dir=~/.vscode --no-sandbox .#g' /usr/share/applications/code.desktop
		msg $green "安装完毕～"
		echo -e "\n\n\t$red如果因网络波动没有安装成功的，请卸载重装！$white"
		enter
	}
	
	_d(){
		msg $red "卸载Visual Studio Code"
		sudo dpkg -r code
		
		rm -rf ~/Desktop/VScode.desktop
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装Visual Studio Code"
         2 "卸载Visual Studio Code"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→Visual Studio Code" "请选择" $OPTIONS

	case $op in
    	1)
    		_i
    		;;
    	2)
    		_d
    		;;
    	*)
    		return
    		;;
	esac


}

_eclipse(){
	
	_i(){
		case `dpkg --print-architecture` in
		arm64 | aarch64)
			#archurl="arm64"
			msg $red "检测到你的系统构架为arm64，开始安装Eclipse"
			wget -c https://mirrors.nju.edu.cn/eclipse//technology/epp/downloads/release/2022-06/R/eclipse-java-2022-06-R-linux-gtk-aarch64.tar.gz -O /opt/eclipse.tar.gz
			;;
		x86_64 | amd64)
			#archurl="amd64"
			msg $red "检测到你的系统构架为amd64，开始安装Eclipse"
			wget -c https://mirrors.neusoft.edu.cn/eclipse/oomph/epp/2022-06/R/eclipse-inst-jre-linux64.tar.gz -O /opt/eclipse.tar.gz
			;;	
		*)
			echo "未知构架，无法安装！";enter; return ;;
		esac
		
		tar -zxvf /opt/eclipse.tar.gz -C /opt/
		
		cat<<-EOF > ~/Desktop/eclipse.desktop
		[Desktop Entry]
		Enncooding=UTF-8
		Name=eclipse
		Comment=Eclipse
		Exec=/opt/eclipse/eclipse
		Icon=/opt/eclipse/icon.xpm
		Terminal=false
		StartupNotify=true
		Type=Application
		Categories=Application;Development;
		EOF

		chmod +x ~/Desktop/eclipse.desktop
		msg $green "安装完毕～"
		echo -e "\n\n\t$red如果因网络波动没有安装成功的，请卸载重装！$white"
		enter
	}
	
	_d(){
		msg $red "卸载Eclipse"
		
		rm -rf ~/Desktop/eclipse.desktop /opt/eclipse
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装Eclipse"
         2 "卸载Eclipse"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→Eclipse" "请选择" $OPTIONS

	case $op in
    	1)
    		_i
    		;;
    	2)
    		_d
    		;;
    	*)
    		return
    		;;
	esac


}



_wps(){
	_i(){
		if [ -d "/opt/kingsoft" ];then
			clear
			echo -e "$red本机已安装有WPS，如想重新安装，请先卸载一遍$white"
			enter
			return
		fi
		msg $red "安装WPS（本次下载可以不用加速器！）"
		echo -e "\n$green请保持网络通畅$white"
		wget -c https://wps-linux-personal.wpscdn.cn/wps/download/ep/Linux2019/11664/wps-office_11.1.0.11664_arm64.deb -O /opt/wps.deb
		[ "$?" == "0" ]&& rm -rf "/usr/share/mime/packages/custom-wps-office.xml"&&sudo dpkg -i  /opt/wps.deb
		
		wget -c https://gitee.com/ak2/ttf-wps-fonts/raw/master/ttf-wps-fonts.tar.xz -O /opt/ttf.tar.xz
		tar -Jxvf ttf.tar.xz -C /
		cd /usr/share/fonts/truetype/wps-fonts
	    for i in mkfontscale mkfontdir fc-cache; do
 	       [[ ! $(command -v ${i}) ]] ||sudo  ${i}
  		done

		msg $green "安装完毕～"
		echo -e "\n\n\t$red如果因网络波动没有安装成功的，请卸载重装！$white"
		enter
	}
	
	_d(){
		msg $red "卸载WPS"
		
		sudo dpkg -r wps-office
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装WPS"
         2 "卸载WPS"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→WPS" "请选择" $OPTIONS

	case $op in
    	1)
    		_i
    		;;
    	2)
    		_d
    		;;
    	*)
    		return
    		;;
	esac


}



_android-studio(){
	_i(){
		msg $red "安装Android Studio（本次下载可以不用加速器！）"
		echo -e "\n$green请保持网络通畅$white"
		wget -c https://r3---sn-j5o76n7z.gvt1.com/edgedl/android/studio/ide-zips/2021.2.1.16/android-studio-2021.2.1.16-linux.tar.gz -O /opt/android-studio.tar.gz
		[ "$?" == "0" ] && mkdir /opt/android-studio && tar -zxvf /opt/android-studio.tar.gz -C /opt/android-studio --strip-components 1

		cat <<-EOF > ~/Desktop/android.desktop
		[Desktop Entry]
		Name =Android Studio
		comment= android studio
		Exec=/opt/android-studio/bin/studio.sh
		Icon=/opt/android-studio/bin/studio.png
		Terminal=false
		Type=Application
		EOF
		
		chmod +x ~/Desktop/android.desktop
		
		##安装Java
		msg $red "安装Java环境！"
		sudo apt-get install  default-jre* -y

		msg $green "安装完毕～"
		echo -e "\n\n\t$red如果因网络波动没有安装成功的，请卸载重装！$white"
		enter
	}
	
	_d(){
		msg $red "卸载Android studio"
		
		rm -rf ~/Desktop/android.desktop /opt/android-studio
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "安装Android Studio"
         2 "卸载Android Studio"
         3 "取消")
    
    _dialog "首页→安装/卸载软件→Android Studio" "请选择" $OPTIONS

	case $op in
    	1)
    		_i
    		;;
    	2)
    		_d
    		;;
    	*)
    		return
    		;;
	esac

}



##🍎
_xrdp(){

	_i(){	
		msg $red "安装xrdp DR远程桌面"
		sudo apt install xrdp -y
		sed -i '6{s/^/xfce4-session/}' /etc/X11/Xsession
		echo xfce4-session >~/.xsession
		
		row=`cat /etc/xrdp/xrdp.ini | grep -n '; full path to bmp-file or file in shared folder' | awk -F ":" '{print $1}'`
		sed -i "$(($row+1)),`cat /etc/xrdp/xrdp.ini | wc -l`"d /etc/xrdp/xrdp.ini
		
		cat <<-EOF>>/etc/xrdp/xrdp.ini
		; full path to bmp-file or file in shared folder
		ls_logo_filename=
		ls_logo_x_pos=240
		ls_logo_y_pos=50
		
		; for positioning labels such as username, password etc
		ls_label_x_pos=170
		ls_label_width=65
		
		; for positioning text and combo boxes next to above labels
		ls_input_x_pos=240
		ls_input_width=235
		ls_input_height=100
		
		; y pos for first label and combo box
		ls_input_y_pos=220
		
		; OK button
		ls_btn_ok_x_pos=260
		ls_btn_ok_y_pos=370
		ls_btn_ok_width=85
		ls_btn_ok_height=30
		
		; Cancel button
		ls_btn_cancel_x_pos=350
		ls_btn_cancel_y_pos=370
		ls_btn_cancel_width=85
		ls_btn_cancel_height=30
		
		[Logging]
		LogFile=xrdp.log
		LogLevel=DEBUG
		EnableSyslog=true
		SyslogLevel=DEBUG
		; LogLevel and SysLogLevel could by any of: core, error, warning, info or debug
		
		[Channels]
		; Channel names not listed here will be blocked by XRDP.
		; You can block any channel by setting its value to false.
		; IMPORTANT! All channels are not supported in all use
		; cases even if you set all values to true.
		; You can override these settings on each session type
		; These settings are only used if allow_channels=true
		rdpdr=true
		rdpsnd=true
		drdynvc=true
		cliprdr=true
		rail=true
		xrdpvr=true
		tcutils=true
		
		; for debugging xrdp, in section xrdp1, change port=5901 to this:
		#port=/tmp/.xrdp/xrdp_display_10
		
		; for debugging xrdp, add following line to section xrdp1
		#chansrvport=/tmp/.xrdp/xrdp_chansrv_socket_7210
		
		
		;
		; Session types
		;
		
		; Some session types such as Xorg, X11rdp and Xvnc start a display server.
		; Startup command-line parameters for the display server are configured
		; in sesman.ini. See and configure also sesman.ini.
		EOF
	
		msg $green "安装完毕～"
		enter
	}
	
	_start(){
		OPTIONS=(
	         1 "［Xvnc模式］"
	         2 "［Xorg模式］"
	         3 "取消")
	
		_dialog "首页→xrdp→启动界面" "请选择" $OPTIONS
		
		case $op in
			1)
				xrdp -k
				rm -rf /var/run/xrdp/xrdp.pid
				row=`cat /etc/xrdp/xrdp.ini | grep -n '; in sesman.ini. See and configure also sesman.ini.' | awk -F ":" '{print $1}'`
				sed -i "$(($row+1)),`cat /etc/xrdp/xrdp.ini | wc -l`"d /etc/xrdp/xrdp.ini
				
				cat <<-EOF>>/etc/xrdp/xrdp.ini
				[Xvnc]
				name=Xvnc
				lib=libvnc.so
				username=ask
				password=ask
				ip=127.0.0.1
				port=5901
				#xserverbpp=24
				#delay_ms=2000
				EOF
				
				xrdp
				enter
				;;
			2)
				xrdp -k
				rm -rf /var/run/xrdp/xrdp.pid
				row=`cat /etc/xrdp/xrdp.ini | grep -n '; in sesman.ini. See and configure also sesman.ini.' | awk -F ":" '{print $1}'`
				sed -i "$(($row+1)),`cat /etc/xrdp/xrdp.ini | wc -l`"d /etc/xrdp/xrdp.ini
				
				cat <<-EOF>>/etc/xrdp/xrdp.ini
				[Xorg]
				name=Xorg
				lib=libxup.so
				username=ask
				password=ask
				ip=127.0.0.1
				port=5901
				code=20
				EOF
				
				xrdp
				enter
				;;
			*)
				return
				;;
		esac
	}
		
		

	
	_d(){
		msg $red "卸载xrdp DR远程桌面"
		sudo apt purge xrdp -y
		msg $green "卸载完毕～"
		enter
	}
	
	OPTIONS=(
         1 "启动xrdp"
         2 "安装xrdp DR远程桌面"
         3 "卸载xrdp DR远程桌面"
         4 "取消")
    
    _dialog "首页→xrdp DR远程桌面" "请选择" $OPTIONS

	case $op in
    	1)
    		if [ -z "`dpkg -l | grep xrdp`" ];then
    			echo -e "$red请先安装xrdp！$white"
    			enter
    			return
    		else
    			_start
    		fi
    		;;
    	2)
    		_i
    		;;
    	3)
    		_d
    		;;
    	*)
    		return
    		;;
	esac
}


##🍎
_qq(){
	msg $red "听说你想安装QQ？"
	echo -en "$green老老实实用手机QQ叭……你还嫌内存用不完吗？$white"
	enter
}



##安装/卸载软件🍎
_app(){
	OPTIONS=(
         1 "Cchromium浏览器"
         2 "火狐firefox浏览器"
         3 "IntelliJ IDEA"
         4 "VSCode"
         5 "Eclipse"
         6 "Android Studio"
         7 "WPS office"
         8 "QQ"
         9 "取消")
	
	_dialog "首页→安装/卸载软件" "请选择" $OPTIONS

	case $op in
    	1)
    		_chromium
    		;;
    	2)
    		_firefox
    		;;
    	3)
    		_idea
    		;;
    	4)
    		_vscode
    		;;
    	5)
    		_eclipse
    		;;
    	6)
    		_android-studio
    		;;
    	7)
    		_wps
    		;;    		
    	8)
    		_qq
    		;;
    	*)
    		return
    	;;
	esac
}

##主题-------------------------------------------------------工作区---------------------------------------------------------------------------------------------------------
_theme(){
	
	##.icons
	_ICONS=(
	"Colloid-cursors.tar.xz"
	"Colloid-dark-cursors.tar.xz"
	"Fluent-cursors.tar.xz"
	"Fluent-dark-cursors.tar.xz"
	"Layan-border-cursors.tar.xz"
	"Layan-cursors.tar.xz"
	"Layan-white-cursors.tar.xz"
	"Nordzy-cursors-lefthand.tar.xz"
	"Nordzy-cursors-white.tar.xz"
	"Nordzy-cursors.tar.xz"
	"WhiteSur-cursors.tar.xz"
	"oreo_black_cursors.tar.xz"
	"oreo_spark_green_cursors.tar.xz"
	"oreo_spark_purple_cursors.tar.xz"
	"oreo_spark_red_cursors.tar.xz"
	"volantes_cursors.tar.xz"
	)
	
	##.themes
	THEMES=(
	"Mojave-Dark.tar.xz"
	"Mojave-Light.tar.xz"
	"Nordic.tar.xz"
	"WhiteSur-Light-green.tar.xz"
	"WhiteSur-Light-red.tar.xz"
	"vimix-amethyst.tar.xz"
	"vimix-beryl.tar.xz"
	"vimix-dark-amethyst.tar.xz"
	"vimix-dark-beryl.tar.xz"
	"vimix-dark-doder.tar.xz"
	"vimix-dark-ruby.tar.xz"
	"vimix-dark.tar.xz"
	"vimix-doder.tar.xz"
	"vimix-light-amethyst.tar.xz"
	"vimix-light-beryl.tar.xz"
	"vimix-light-doder.tar.xz"
	"vimix-light-ruby.tar.xz"
	"vimix-light.tar.xz"
	"vimix-ruby.tar.xz"
	"vimix.tar.xz"
	)
	
	##background
	BG=(wallpaper01.png wallpaper02.png wallpaper03.png wallpaper04.png wallpaper05.png wallpaper06.png wallpaper07.png wallpaper08.png wallpaper09.jpeg wallpaper10.jpg wallpaper11.jpg wallpaper12.jpeg wallpaper13.png wallpaper14.jpg wallpaper15.jpg wallpaper16.jpg wallpaper17.jpg wallpaper18.jpeg wallpaper19.png wallpaper20.png wallpaper21.png wallpaper22.jpeg wallpaper23.jpeg wallpaper24.png wallpaper25.png wallpaper26.jpeg wallpaper27.jpeg wallpaper28.jpeg wallpaper29.png wallpaper30.jpeg wallpaper31.jpeg wallpaper32.jpeg wallpaper33.jpeg wallpaper34.jpeg wallpaper35.jpeg wallpaper36.jpeg wallpaper37.png wallpaper38.png wallpaper39.jpeg wallpaper40.jpeg wallpaper41.png wallpaper42.png wallpaper43.png wallpaper44.png wallpaper45.jpeg wallpaper46.jpeg)	
	
	##icons
	ICONS=(
	"Marwaita.tar.xz"
	"McMojave-circle-dark.tar.xz"
	"McMojave-circle.tar.xz"
	"Qogir-dark.tar.xz"
	"Qogir.tar.xz"
	"Reversal-black.tar.xz"
	"Reversal-blue.tar.xz"
	"Reversal-brown.tar.xz"
	"Reversal-cyan.tar.xz"
	"Reversal-green.tar.xz"
	"Reversal-grey.tar.xz"
	"Reversal-orange.tar.xz"
	"Reversal-pink.tar.xz"
	"Reversal-purple.tar.xz"
	"Reversal-red.tar.xz"
	"Tela-circle-dark.tar.xz"
	"Tela-circle.tar.xz"
	"WhiteSur-dark.tar.xz"
	"WhiteSur.tar.xz"
	)
	
	_changeOP(){
		tmp=""
		count=1
		export FILE=()
		for x in $*
		do
			printf " $count" >> /tmp/file
			printf " $x" >> /tmp/file
			FILE[$(($count-1))]=$x
			let count++
		done
		
		sed -i "s#.tar.xz##g"  /tmp/file
		printf " $count" >> /tmp/file
		printf " 取消" >> /tmp/file
		export OPTIONS=()
		count=0
		for x in `cat  /tmp/file`
		do
			OPTIONS[$count]="$x"
			let count++
		done
		rm -rf /tmp/file
	}
	
	_bg(){
		count=1
		OPTIONS=()
		for x in `echo "${BG[*]}" |  sed "s#.png##g;s#.jpg##g;s#.jpeg##g"`
		do
			printf $count >> /tmp/file
			printf " $x " >> /tmp/file
			let count++
		done
		
		printf " $count" >> /tmp/file
		printf " 取消" >> /tmp/file
		count=0
		for x in `cat /tmp/file`
		do
			OPTIONS[$count]=$x
			let count++
		done
		rm -rf /tmp/file

		_dialog "首页→桌面美化→桌面背景" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#BG[*]}+1))" ]&&return
		
		package=${BG[$(($op-1))]}
		[ ! -e /tmp/bg/ ]&&mkdir -p /tmp/bg/
		
		msg $red "下载资源包…ing"
		wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/bg/$package" -O "/tmp/bg/$package"
		
		xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorVNC-0/workspace0/last-image -s  "/tmp/bg/$package"
		
		msg $green "设置桌面背景`echo $package | sed "s#.png##g;s#.jpg##g;s#.jpeg##g"`完成～"
		echo -e "$green\n\n\t如何桌面背景没有设置成功请检查网络，再重新设置！"
		enter
	}
	
	_themes(){
		_changeOP ${THEMES[@]}
		_dialog "首页→桌面美化→主题" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#FILE[*]}+1))" ]&&return

		package=${FILE[$(($op-1))]}
		[ ! -e /tmp/.themes/ ]&&mkdir -p /tmp/.themes/
		
		if [ ! -e "~/.themes/`echo $package | sed "s#.tar.xz##g"`" ];then
			[ ! -e ~/.themes ]&&mkdir -p ~/.themes 
			msg $red "下载资源包…ing"
			wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/.themes/$package" -O "/tmp/.themes/$package"
			
			msg $red "解压资源…ing"
			sleep 1
			xz -d "/tmp/.themes/$package"
			tar -xvhf "/tmp/.themes/`echo $package | sed "s#.xz##g"`" -C ~/.themes/
		fi
		
		xfconf-query -c xsettings -p /Net/ThemeName -s "`echo $package | sed "s#.tar.xz##g"`"
		
		msg $green "设置主题`echo $package | sed "s#.tar.xz##g"`完成～"
		echo -e "$green\n\n\t如何主题没有设置成功请检查网络，再重新设置！"
		enter
	}
	
	_icons(){
		_changeOP ${ICONS[@]}
		_dialog "首页→桌面美化→软件图标" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#FILE[*]}+1))" ]&&return

		package=${FILE[$(($op-1))]}
		[ ! -e /tmp/icons/ ]&&mkdir -p /tmp/icons/
		
		if [ ! -e "~/icons/`echo $package | sed "s#.tar.xz##g"`" ];then
			[ ! -e ~/.local/share/icons  ]&&mkdir -p ~/.local/share/icons 
			msg $red "下载资源包…ing"
			sleep 1
			wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/icons/$package" -O "/tmp/icons/$package"
			
			msg $red "解压资源…ing"
			xz -d "/tmp/icons/$package"
			tar -xvhf "/tmp/icons/`echo $package | sed "s#.xz##g"`" -C ~/.local/share/icons 
		fi
		
		xfconf-query -c xsettings -p /Net/IconThemeName -s "`echo $package | sed "s#.tar.xz##g"`"
		
		msg $green "设置软件图标`echo $package | sed "s#.tar.xz##g"`完成～"
		echo -e "$green\n\n\t如何软件图标没有设置成功请检查网络，再重新设置！"
		enter
	
	}
		
	_mouse(){
		_changeOP ${_ICONS[@]}
		_dialog "首页→桌面美化→光标(鼠标)" "请选择" $OPTIONS
		
		##选择取消，就退出
		[ "$op" == "$((${#FILE[*]}+1))" ]&&return

		package=${FILE[$(($op-1))]}
		[ ! -e /tmp/.icons/ ]&&mkdir -p /tmp/.icons/
		
		if [ ! -e "~/.icons/`echo $package | sed "s#.tar.xz##g"`" ];then
			[ ! -e ~/.icons  ]&&mkdir -p ~/.icons 
			msg $red "下载资源包…ing"
			sleep 1
			wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/.icons/$package" -O "/tmp/.icons/$package"
			
			msg $red "解压资源…ing"
			xz -d "/tmp/.icons/$package"
			tar -xvhf "/tmp/.icons/`echo $package | sed "s#.xz##g"`" -C ~/.icons 
		fi
		
		xfconf-query -c xsettings -p /Gtk/CursorThemeName -s "`echo $package | sed "s#.tar.xz##g"`"
		
		msg $green "设置光标(鼠标)`echo $package | sed "s#.tar.xz##g"`完成～"
		echo -e "$green\n\n\t如何光标(鼠标)没有设置成功请检查网络，再重新设置！"
		enter	
	}
	
	
	
		OPTIONS=(
			1 "桌面背景"   ##bg
			2 "主题"    ##.themes
			3 "软件图标"   ##local/share/icons
			4 "光标(鼠标)"  ##.icons
			5 "取消")

    _dialog "首页→桌面美化" "请选择" $OPTIONS
    
	case $op in
    	1)
    		_bg
    		;;
    	2)
    		_themes
    		;;
    	3)
    		_icons
    		;;
    	4)
    		_mouse
    		;;
    	*)
    		return
    		;;
	esac

}
##主题----------------------------------------------------------------------------------------------------------------------------------------------------------------



##更换语言
_language(){
	_en(){
		msg $green "更换为英语"
		sed -i "s#export LC_ALL=zh_CN.UTF-8##g" ~/.bashrc
		echo -e "$red\n\n\t此操作仅会删除 .bashrc 里面的 export LC_ALL=zh_CN.UTF-8$white"
		echo -e "$red\n\n\t重启后生效！$white"
		enter
	}
	
	_zh(){
		msg $green "更换为中文"
		[ -z "`dpkg -l | grep fonts-wqy-microhei`" ]&&sudo apt-get install fonts-wqy-microhei -y
		[ ! -z "`cat /etc/locale.gen|grep '# zh_CN.UTF-8 UTF-8'`" ]&&sed -i "s/# zh_CN.UTF-8 UTF-8/ zh_CN.UTF-8 UTF-8/g" /etc/locale.gen
		locale-gen
		
		[ -z "`cat ~/.bashrc |grep  'export LC_ALL=zh_CN.UTF-8'`" ]&&echo "export LC_ALL=zh_CN.UTF-8" >> ~/.bashrc
		if [[ "`cat ~/.bashrc`" =~ 'if [ "$TERM"="linux" ] ;then ' ]]; then
			echo 'string exist'
		else
		    cat <<-EOF>>~/.bashrc
			if [ "\$TERM"="linux" ] ;then 
				export LANGUAGE=en_US 
			fi 
			EOF
		
		fi
		
		echo -e "$red\n\n\t重启后生效！$white"
		enter
	}
	
	
		OPTIONS=(
			1 "英文"   
			2 "中文"    
			3 "取消")

    _dialog "首页→更换语言" "请选择" $OPTIONS
 
	case $op in
    	1)
    		_en
    		;;
    	2)
    		_zh
    		;;
    	*)
    		return
    		;;
	esac   
}

##终端美化
_term(){
	echo
}

##作者留言
_other(){
	clear
	echo -e "$red很幸运与你相遇～～$white"
	#echo -e "$red 此ubuntu20.04是up主参考了各大教程所创造的版本！$white"
	enter
}

_update(){
	msg $red "更新ubuntu脚本"
	echo -e "\n\t$green------------------------------$white"
	echo -e "\t$red ubuntu脚本迭代更新信息$white"
	echo -e "\t (1)ubuntu 1.0 最初代脚本$white"
	echo -e "\t (2)ubuntu 1.5 $red（当前版本）$white"
	echo -e "\t     ●添加_软件安装_功能$white"
	echo -e "\t     ●添加_桌面美化_功能$white"
	echo -e "\t$green------------------------------$white"
	echo -e "\n\n\t作者不定时更新脚本，如想体验新功能，更新ubuntu脚本即可体验！"
	enter
	
	wget -c "https://raw.githubusercontent.com/WindowHZT/termux-ubuntu2004/main/usr/ubuntu" -O "/tmp/ubuntu"
	mv /tmp/ubuntu /usr/local/bin/ubuntu
	chmod +x /usr/local/bin/ubuntu
	msg $green "更新完毕～"
	enter
	exit
}

_clear(){
	msg $red "这仅仅是清理脚本产生的垃圾，请悉知！"
	enter
	echo -e "$yellow清理安装包.$white"
	rm -rf /opt/eclipse.tar.gz /opt/ideaIC-2022.2.tar.gz /opt/ideaIU-2022.2.tar.gz ~/Downloads/VScode.deb /opt/android-studio.tar.gz  /opt/ttf.tar.xz  /opt/wps.deb
	
	echo -e "\n$yellow清理美化包..$white"	
	rm -rf /tmp/.icons/* /tmp/.themes/* /tmp/icons/*
	
	echo -e "\n$yellow保留用户配置，清除多余资源包...$white"
	bg_name=`xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitorVNC-0/workspace0/last-image | awk -F '/' '{print $NF}'`
	themes_name=`xfconf-query -c xsettings -p /Net/ThemeName`
	icons_name=`xfconf-query -c xsettings -p /Net/IconThemeName`
	mouse_name=`xfconf-query -c xsettings -p /Gtk/CursorThemeName`
	
	echo -e "\t|$green用户背景图：$bg_name$white"
	echo -e "\t|$green用户主题：$themes_name$white"
	echo -e "\t|$green用户图标：$icons_name$white"
	echo -e "\t|$green用户光标：$mouse_name$white"
	
	##清理背景图
	cd /tmp/bg >/dev/null 2>&1
	for x in `ls`
	do
		[ "$x" == "$bg_name" ]&&continue
		[ -e "/tmp/bg/$x" ]&&sudo rm -rf /tmp/bg/$x
	done
	
	##清理主题
	cd ~/.themes >/dev/null 2>&1
	for x in `ls -d */ | sed "s#/##g"`
	do
		[ "$x" == "$themes_name" ]&&continue
		sudo rm -rf $x >/dev/null 2>&1
		sudo rm -rf $x/ >/dev/null 2>&1
	done

	##清理图标
	cd ~/.local/share/icons >/dev/null 2>&1
	for x in `ls -d */ | sed "s#/##g"`
	do
		[ "$x" == "$icons_name" ]&&continue
		sudo rm -rf $x >/dev/null 2>&1
		sudo rm -rf $x/ >/dev/null 2>&1
	done
		
	##清理光标
	cd ~/.icons  >/dev/null 2>&1
	for x in `ls -d */ | sed "s#/##g"`
	do
		[ "$x" == "$mouse_name" ]&&continue
		sudo rm -rf $x >/dev/null 2>&1
		sudo rm -rf $x/ >/dev/null 2>&1
	done
	
	cd ~
	echo -e "\n$green清理完毕～....$white"
	enter
}

_dialog(){
	export LC_ALL="zh_CN.UTF-8"
	export PORT=1
	
	dialog --clear \
		--backtitle "$1" \
		--title "@参(•̀⌄•́)芜湖起飞" \
	 	--nocancel \
	 	--menu "$2" 20 40 8 \
		"${OPTIONS[@]}" \
	 	2>/tmp/menu
	 	
	 	export op=`cat /tmp/menu`
}



_Main(){
	OPTIONS=(
         1 "安装/卸载软件"
         2 "桌面美化"
         3 "更换语言"
         #4 "美化终端"  ##sh -c "$(curl -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)"
         4 "xrdp DR远程桌面"
         5 "vnc 信息"
         6 "版本信息"
         7 "更新ubuntu脚本"
         8 "清理垃圾"
         9 "关机～"
         10 "退出")
    
    _dialog "首页" "使用↑↓选择，也可以用手点击选项再回车哦" $OPTIONS
	
    case $op in 
    	1)
    		_app
    		;;
    	2)
    		_theme
    		;;
    	3)
    		_language
    		;;
    	4)
    		_xrdp
    		;;
    	5)
    		clear
    		vnc
    		enter
    		;;
    	6)
    		msg $red "ubuntu设备信息"
			echo -e "$green----------------版本-----------------$white"
			lsb_release -a
			echo -e "$green----------------磁盘-----------------$white"
			df -hl
			_other
    		enter
    		;;
    	7)
    		_update
    		;;
    	8)
    		_clear
    		;;
    	9)
    		logout
    		;;
    	*)
    		clear
    		export s=1
    		;;
esac
}

while :
do
	if [ "$s" == "0" ];then
		_Main
	else
		break
	fi
done







